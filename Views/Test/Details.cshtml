@model TestMe.ViewModels.SolveTestViewModel
@inject Microsoft.AspNetCore.Identity.UserManager<TestMe.Models.User> UserManager

@{
    ViewData["Title"] = "Solve Test";
    // Initialize userId variable
    string? userId = null;
    bool isCreator = false;

    // Retrieve the current user
    var user = await UserManager.GetUserAsync(User);

    // Get the user ID if the user is not null
    if (user != null)
    {
        userId = user.Id;
        isCreator = userId == Model.CreatorId;
    }

}

<form asp-action="Details" method="post" class="test-form col-7 mx-auto details">
    <input type="hidden" asp-for="CreatorId" />
    <input type="hidden" asp-for="TestId" />
    <div class="form-group">
        <input asp-for="Title" class="test-title-input form-control" readonly />
        @if (isCreator)
        {
            <div class="d-flex justify-content-between">
                @Html.Partial("_TestCreatorMessage")
                @Html.Partial("_EditTestButton")
            </div>
        }
    </div>

    @if (userId == null)
    {
        @Html.Partial("_LoginPrompt")
    }
    else
    {
        <div id="questions" class="@(isCreator ? "disabled" : "")">
            @for (int i = 0; i < Model.Questions.Count; i++)
            {
                <div class="question py-4 border-top position-relative" id="question-@i">
                    <div class="question-index">@(i + 1)</div>
                    <div class="form-group d-flex align-items-center justify-between">
                        <input type="hidden" asp-for="Questions[i].Id" value="@Model.Questions[i].Id" />
                        <input type="text" asp-for="Questions[i].Text" class="question-input form-control" readonly />
                    </div>
                    <div class="options form-group d-flex flex-column form-group gap-3 mt-3">
                        @if (Model.Questions[i].Options != null && Model.Questions[i].Options.Count > 0)
                        {
                            @for (int j = 0; j < Model.Questions[i].Options.Count; j++)
                            {
                                <div class="option-box" data-question="@i" data-option="@j">
                                    <input type="radio" asp-for="Questions[i].SelectedOption" value="@j" class="option-radio d-none" />
                                    <input type="text" asp-for="Questions[i].Options[j]" value="@Model.Questions[i].Options[j]" class="option-input form-control" readonly />
                                </div>
                            }
                        }
                    </div>
                </div>
            }
        </div>
    }

    @if (!isCreator && userId != null)
    {<button type="submit" id="submit-button" class="btn btn-primary w-100 mt-3" disabled>Submit</button>}
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
</form>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const options = document.querySelectorAll('.details .option-box');
            const submitButton = document.getElementById('submit-button');
            let selectedOptions = Array(@Model.Questions.Count).fill(false);

            options.forEach(option => {
                option.addEventListener('click', function () {
                    const questionIndex = this.dataset.question;
                    const optionIndex = this.dataset.option;
                    const radio = this.querySelector('.option-radio');

                    document.querySelectorAll(`.details [data-question="${questionIndex}"]`).forEach(el => {
                        el.classList.remove('selected');
                    });

                    this.classList.add('selected');
                    radio.checked = true;
                    selectedOptions[questionIndex] = true;
                    checkAllSelected();
                });
            });

            function checkAllSelected() {
                if (selectedOptions.every(v => v === true)) {
                    submitButton.disabled = false;
                } else {
                    submitButton.disabled = true;
                }
            }
        });
    </script>
}
